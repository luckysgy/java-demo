server:
  port: 59091
  servlet:
    context-path: /api

iniEnvFilePath: /project/env.ini

test:
  name: ${TEST_NAME:1}

spring:
  profiles:
    active: dev
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    init-db: ${DATASOURCE_INIT_DB}
#    url: ${DATASOURCE_URL}
#    userName: ${DATASOURCE_USERNAME}
#    password: ${DATASOURCE_PASSWORD}
#    # 使用我们自己的druid数据源
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      # 初始化连接个数
#      initialSize: 10
#      # 最小连接个数
#      minIdle: 5
#      # 最大连接个数
#      maxActive: 500
#      # 最大等待时间
#      maxWait: 60000
#      # 配置检测可以关闭的空闲连接，间隔时间
#      timeBetweenEvictionRunsMillis: 60000
#      # 配置连接在池中的最小生存时间
#      minEvictableIdleTimeMillis: 900000
#      # 检测连接是否有，有效得select语句
#      validationQuery: SELECT 1 FROM DUAL
#      # 申请连接的时候检测，如果空闲时间大于time-between-eviction-runs-millis，执行validationQuery检测连接是否有效，建议配置为true，不影响性能，并且保证安全性。
#      testWhileIdle: true
#      # 申请连接时执行validationQuery检测连接是否有效，建议设置为false，不然会会降低性能
#      testOnBorrow: false
#      # 归还连接时执行validationQuery检测连接是否有效，建议设置为false，不然会会降低性能
#      testOnReturn: false
#      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
#      # 打开PSCache，并且指定每个连接上PSCache的大小
#      poolPreparedStatements: true
#
#      maxPoolPreparedStatementPerConnectionSize: 20
#      useGlobalDataSourceStat: true
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
#      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL） 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 ##########
#      filters: stat,wall,log4j2
#      # 自己配置监控统计拦截的filter
#      filter:
#        # 开启druiddatasource的状态监控
#        stat:
#          enabled: false
#          db-type: mysql
#          # 开启慢sql监控，超过10s 就认为是慢sql，记录到日志中
#          log-slow-sql: true
#          slow-sql-millis: 10000
#        # 日志监控，使用slf4j 进行日志输出
#        slf4j:
#          enabled: false
#          statement-log-error-enabled: true
#          statement-create-after-log-enabled: false
#          statement-close-after-log-enabled: false
#          result-set-open-after-log-enabled: false
#          result-set-close-after-log-enabled: false
#      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
#      web-stat-filter:
#        enabled: true                   # 启动 StatFilter
#        url-pattern: /*                 # 过滤所有url
#        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
#        session-stat-enable: true       # 开启session统计功能
#        session-stat-max-count: 1000    # session的最大个数,默认100
#      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
#      stat-view-servlet:
#        enabled: true                   # 启用StatViewServlet
#        url-pattern: /druid/*           # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
#        reset-enable: false              # 不允许清空统计数据,重新计算
#        login-userName: root            # 配置监控页面访问密码
#        login-password: 123
#        allow: work01.server.com           # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
#        deny:                                        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
# mybatis plus
mybatis-plus:
  #注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations:
    # classpath* 代表扫描全局,也就是所有的子模块,
    # ** 代表中间不管有多少级目录,最终找到mapper,找到任意名称的xml文件
    - classpath*:mapper/**/*.xml
  # 主键类型
  global-config:
    #0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 0
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    #capital-mode: true
  customIdGenerator:
    # 是否使能采用漂移雪花算法生成数据库主键
    enableYitId: true
  #自定义SQL注入器
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    # mybatis-plus配置控制台打印完整带参数SQL语句
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

# 日志配置
logging:
  level:
    # 注意注意注意 一定要修改成自己的包名
    # 如果你只需要输出info，可以不用修改成自己的包名，但是如果为其他级别，
    # 比如debug必修改成自己的包名才会生效
    com.concise.demo: debug
  file:
    path: /runtime-data/logs

# 配置swagger配置
knife4j:
  basic:
    username: admin
    password: 666666
    # 开启认证
    enable: true
  # 默认是false ,屏蔽所有Swagger的相关资源
  production: false
  # 是否开启swagger
  enable: true
  info:
    title: test
    description: "测试"
    version: "1.0.0"
    contact:
      name: "阳哥"
      url: "www.test.com"
      email: "xxx@qq.com"

